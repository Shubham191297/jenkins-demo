<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4106.v7a_8a_8176d450">
    <script>// pipeline {
//     agent any
//     stages {
//         stage(&apos;Deploy&apos;) {
//             steps {
//                 retry(3) {
//                     sh &apos;echo hello&apos;
//                 }

//                 timeout(time: 3, unit: &apos;SECONDS&apos;) {
//                     sh &apos;sleep 5&apos;
//                 }
//             }
//         }
//     }
// }

// pipeline {
//     agent any

//     environment {
//         NAME = &apos;Shubham&apos;
//         LASTNAME = &apos;Thapliyal&apos;
//     }

//     stages {
//         stage(&apos;Build&apos;) {
//             steps {
//                 sh &apos;echo $NAME $LASTNAME&apos;
//             }
//         }
//     }
// }

// pipeline {
//     agent any

//     environment {
//         secret = credentials(&apos;SECRET_TEXT&apos;)
//     }
    
//     stages {
//         stage(&apos;Example stage 1&apos;) {
//             steps {
//                 sh &apos;echo $secret&apos;
//             }
//         }
//     }
// }

pipeline {
    agent any
    stages {
        stage(&apos;Test&apos;) {
            steps {
                // sh &apos;echo &quot;Fail!&quot;; exit 1&apos;
                sh &apos;echo &quot;Hello Brother!&quot;&apos;
            }
        }
    }
    post {
        always {
            echo &apos;I will always get executed :D&apos;
        }
        success {
            echo &apos;I will only get executed if this success&apos;
        }
        failure {
            echo &apos;I will only get executed if this fails&apos;
        }
        unstable {
            echo &apos;I will only get executed if this is unstable&apos;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>